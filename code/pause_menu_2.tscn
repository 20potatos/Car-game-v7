[gd_scene load_steps=10 format=3 uid="uid://b6y5w413wb70d"]

[ext_resource type="PackedScene" uid="uid://ci6i6g5xval1k" path="res://scenes/Audio_try_3.tscn" id="2_ehxk0"]
[ext_resource type="PackedScene" uid="uid://bra4s0nm1fc0a" path="res://scenes/restart_button.tscn" id="3_u3dyq"]
[ext_resource type="Script" path="res://code/Audio_try_3.gd" id="3_uqj8b"]

[sub_resource type="GDScript" id="GDScript_fgtge"]
script/source = "extends Control
@onready var optionsMenu = preload(\"res://scenes/Audio_try_3.tscn\")
func _ready():
	if not $MasterSlider or not $MusicSlider or not $SFXSlider:
		$AnimationPlayer.play(\"RESET\")
	
	#this is the one

func resume():
	get_tree().paused = false
	$AnimationPlayer.play(\"RESET\")

func pause():
	get_tree().paused = true
	$AnimationPlayer.play(\"Blur\")

func testEsc():
	if Input.is_action_just_pressed(\"esc\") and !get_tree().paused:
		pause()
	elif Input.is_action_just_pressed(\"esc\") and get_tree().paused:
		resume()

func _on_resume_pressed():
	resume()


func _on_quit_pressed():
	get_tree().quit()
	
#func _on_apply_pressed():
	#var master_slider = $MasterSlider
	#var music_slider = $MusicSlider
	#var sfx_slider = $SFXSlider

	#if master_slider and music_slider and sfx_slider:
		#print(\"Sliders initialized successfully.\")
													#AudioServer.set_bus_volume_db(0, linear_to_db(master_slider.value))
													#AudioServer.set_bus_volume_db(1, linear_to_db(music_slider.value))
													#AudioServer.set_bus_volume_db(2, linear_to_db(sfx_slider.value))
	#else:
		#print(\"One or more sliders are not initialized properly.\")
	
	#AudioServer.set_bus_volume_db(0, linear_to_db($MasterSlider.value))
	#AudioServer.set_bus_volume_db(1, linear_to_db($MusicSlider.value))
	#AudioServer.set_bus_volume_db(2, linear_to_db($SFXSlider.value))

	
func _process(_delta):
	testEsc()
	






	
"

[sub_resource type="Shader" id="Shader_1tep8"]
code = "shader_type canvas_item;
uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear_mipmap;

uniform float lod: hint_range(0.0, 5) = 0.0;

void fragment(){
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV, lod);
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rs5vj"]
shader = SubResource("Shader_1tep8")
shader_parameter/lod = 0.0

[sub_resource type="Animation" id="Animation_yqhj0"]
resource_name = "Blur"
length = 0.3
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:material:shader_parameter/lod")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.654, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PanelContainer:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_mya6n"]
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:material:shader_parameter/lod")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PanelContainer:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_03usv"]
_data = {
"Blur": SubResource("Animation_yqhj0"),
"RESET": SubResource("Animation_mya6n")
}

[node name="PauseMenu" type="Control"]
process_mode = 3
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 4
size_flags_vertical = 4
script = SubResource("GDScript_fgtge")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_rs5vj")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="PanelContainer" type="PanelContainer" parent="."]
process_mode = 3
modulate = Color(1, 1, 1, 0)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -792.0
offset_top = -388.0
offset_right = 792.0
offset_bottom = 388.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="PanelContainer"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="Resume" parent="PanelContainer/VBoxContainer2" instance=ExtResource("3_u3dyq")]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
text = "RESUME"

[node name="Quit" parent="PanelContainer/VBoxContainer2" instance=ExtResource("3_u3dyq")]
layout_mode = 2
text = "QUIT"

[node name="Sound options" parent="PanelContainer/VBoxContainer2" instance=ExtResource("2_ehxk0")]
layout_mode = 2
script = ExtResource("3_uqj8b")

[node name="Apply" type="Button" parent="PanelContainer/VBoxContainer2"]
visible = false
layout_mode = 2
text = "Apply"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_03usv")
}

[connection signal="pressed" from="PanelContainer/VBoxContainer2/Resume" to="." method="_on_resume_pressed"]
[connection signal="pressed" from="PanelContainer/VBoxContainer2/Quit" to="." method="_on_quit_pressed"]
[connection signal="pressed" from="PanelContainer/VBoxContainer2/Apply" to="." method="_on_apply_pressed"]
